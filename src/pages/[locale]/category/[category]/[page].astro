---
import BaseLayout from '@/layouts/BaseLayout'
import ListPosts from '@/components/ListPosts'
import ListCategories from '@/components/ListCategories'
import TitlePage from '@/components/TitlePage'
import { sluglify, unsluglify, getCategories, getPosts } from '@/utils'
import { siteConfig } from '@/data/site.config'
import Pagination from '@/components/Pagination'
import { getRelativeLocaleUrlList } from 'astro:i18n'
import { useTranslations } from 'src/i18n/utils'
import { getPostsByLocale } from 'src/utils/post'
import { getCategoriesByLocale } from 'src/utils/post'

const params = Astro.params
const { page, locale } = Astro.props

export async function getStaticPaths({ paginate }: any) {
	const paths = getRelativeLocaleUrlList()

	return (
		await Promise.all(
			paths.flatMap(async (localePath) => {
				const locale = localePath.split('/')[1]
				const categories = await getCategoriesByLocale(locale)
				const posts = await getPostsByLocale(locale)
				return categories.flatMap((category: string) => {
					const unsluglifyNameCategory = unsluglify(category!.toLowerCase())
					const filteredPosts = posts.filter(
						(post) => post.data.category.toLowerCase() === unsluglifyNameCategory
					)

					const result = paginate(filteredPosts, {
						params: {
							category: sluglify(category.toLowerCase()),
							locale: locale
						},
						pageSize: siteConfig.paginationSize
					})

					return result
				})
			})
		)
	).flat()
}

const unsluglifyNameCategory = unsluglify(params.category!.toLowerCase())
const categoryName = (await getCategories()).find(
	(category) => category.toLowerCase() === unsluglifyNameCategory
)
const posts = page.data
const t = useTranslations(Astro.currentLocale)
---

<BaseLayout title={t(`categories.${categoryName}`)}>
	<TitlePage title={t(`categories.${categoryName}`)} />
	<ListCategories activeCategory={params.category} />
	<ListPosts posts={posts} />
	<Pagination page={page} />
</BaseLayout>
